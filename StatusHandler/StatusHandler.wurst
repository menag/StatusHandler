package StatusHandler

import ClosureTimers
import StatusHandlerConfig

constant int STUN_ORDER_ID = 852231
constant int SILENCE_ORDER_ID = 852668
constant int DISARM_BOTH_ORDER_ID = 852585
constant int DISARM_MELEE_ORDER_ID = 852585
constant int DISARM_RANGED_ORDER_ID = 852585
constant int ENSNARE_ORDER_ID = 852106

constant unit STATUS_DUMMY = CreateUnit(DUMMY_PLAYER, DUMMY_UNIT_ID, 0., 0., 0.)
constant unit STATUS_DUMMY1 = CreateUnit(DUMMY_PLAYER, DUMMY_UNIT_ID, 0., 0., 0.)
constant unit STATUS_DUMMY2 = CreateUnit(DUMMY_PLAYER, DUMMY_UNIT_ID, 0., 0., 0.)

timer array stunTimer
timer array silenceTimer
timer array disarmBothTimer
timer array disarmMeleeTimer
timer array disarmRangedTimer
timer array ensnareTimer
int array stunCounter
int array silenceCounter
int array disarmBothCounter
int array disarmMeleeCounter
int array disarmRangedCounter
int array ensnareCounter

public function onIndex(int i)
	stunTimer[i] = null
	silenceTimer[i] = null
	disarmBothTimer[i] = null
	disarmMeleeTimer[i] = null
	disarmRangedTimer[i] = null
	ensnareTimer[i] = null
	stunCounter[i] = 0
	silenceCounter[i] = 0
	disarmBothCounter[i] = 0
	disarmMeleeCounter[i] = 0
	disarmRangedCounter[i] = 0
	ensnareCounter[i] = 0
	
public function onDeindex(int i)
	if stunTimer[i] != null
		stunTimer[i].release()
	if silenceTimer[i] != null
		silenceTimer[i].release()
	if disarmBothTimer[i] != null
		disarmBothTimer[i].release()
	if disarmMeleeTimer[i] != null
		disarmMeleeTimer[i].release()
	if disarmRangedTimer[i] != null
		disarmRangedTimer[i].release()
	if ensnareTimer[i] != null
		ensnareTimer[i].release()

public function unit.addStun()
	if not this.isStunned()
		STATUS_DUMMY.issueTargetOrderById(STUN_ORDER_ID, this)
	stunCounter[this.getIndex()]++

public function unit.removeStun()
	stunCounter[this.getIndex()]--
	if not this.isStunned()
		this.removeAbility(STUN_BUFF_ID)
	
public function unit.addStunTimed(real timeout)
	int i = this.getIndex()
	if stunTimer[i] != null and stunTimer[i].getRemaining() >= timeout
		return
		
	if stunTimer[i] == null
		stunTimer[i] = getTimer()..setData(i)
		this.addStun()
	
	stunTimer[i].start(timeout, () -> begin
		int j = GetExpiredTimer().getData()
		j.getUnit().removeStun()
		stunTimer[j].release()
		stunTimer[j] = null
	end)
	
public function unit.isStunned() returns boolean
	return stunCounter[this.getIndex()] > 0
	
public function unit.addSilence()
	if not this.isSilenced()
		STATUS_DUMMY.issueTargetOrderById(SILENCE_ORDER_ID, this)
	silenceCounter[this.getIndex()]++

public function unit.removeSilence()
	silenceCounter[this.getIndex()]--
	if not this.isSilenced()
		this.removeAbility(SILENCE_BUFF_ID)
	
public function unit.addSilenceTimed(real timeout)
	int i = this.getIndex()
	if silenceTimer[i] != null and silenceTimer[i].getRemaining() >= timeout
		return
		
	if silenceTimer[i] == null
		silenceTimer[i] = getTimer()..setData(i)
		this.addSilence()
	
	silenceTimer[i].start(timeout, () -> begin
		int j = GetExpiredTimer().getData()
		j.getUnit().removeSilence()
		silenceTimer[j].release()
		silenceTimer[j] = null
	end)
	
public function unit.isSilenced() returns boolean
	return silenceCounter[this.getIndex()] > 0
	
public function unit.addEnsnare()
	if not this.isEnsnared()
		STATUS_DUMMY.issueTargetOrderById(ENSNARE_ORDER_ID, this)
	ensnareCounter[this.getIndex()]++

public function unit.removeEnsnare()
	ensnareCounter[this.getIndex()]--
	if not this.isEnsnared()
		this.removeAbility(ENSNARE1_BUFF_ID)
		this.removeAbility(ENSNARE2_BUFF_ID)

public function unit.addEnsnareTimed(real timeout)
	int i = this.getIndex()
	if ensnareTimer[i] != null and ensnareTimer[i].getRemaining() >= timeout
		return
		
	if ensnareTimer[i] == null
		ensnareTimer[i] = getTimer()..setData(i)
		this.addEnsnare()
		
	ensnareTimer[i].start(timeout, () -> begin
		int j = GetExpiredTimer().getData()
		j.getUnit().removeEnsnare()
		ensnareTimer[j].release()
		ensnareTimer[j] = null
	end)
		
public function unit.isEnsnared() returns boolean
	return ensnareCounter[this.getIndex()] > 0
	
public function unit.addDisarmBoth()
	if not this.isDisarmedBoth()
		STATUS_DUMMY.issueTargetOrderById(DISARM_BOTH_ORDER_ID, this)
	disarmBothCounter[this.getIndex()]++

public function unit.removeDisarmBoth()
	disarmBothCounter[this.getIndex()]--
	if not this.isDisarmedBoth()
		this.removeAbility(DISARM_BOTH_BUFF_ID)

public function unit.addDisarmBothTimed(real timeout)
	int i = this.getIndex()
	if disarmBothTimer[i] != null and disarmBothTimer[i].getRemaining() >= timeout
		return
		
	if disarmBothTimer[i] == null
		disarmBothTimer[i] = getTimer()..setData(i)
		this.addDisarmBoth()
	
	disarmBothTimer[i].start(timeout, () -> begin
		int j = GetExpiredTimer().getData()
		j.getUnit().removeDisarmBoth()
		disarmBothTimer[j].release()
		disarmBothTimer[j] = null
	end)
	
public function unit.isDisarmedBoth() returns boolean
	return disarmBothCounter[this.getIndex()] > 0
	
public function unit.addDisarmMelee()
	if not this.isDisarmedMelee()
		STATUS_DUMMY1.issueTargetOrderById(DISARM_MELEE_ORDER_ID, this)
	disarmMeleeCounter[this.getIndex()]++

public function unit.removeDisarmMelee()
	disarmMeleeCounter[this.getIndex()]--
	if not this.isDisarmedMelee()
		this.removeAbility(DISARM_MELEE_BUFF_ID)

public function unit.addDisarmMeleeTimed(real timeout)
	int i = this.getIndex()
	if disarmMeleeTimer[i] != null and disarmMeleeTimer[i].getRemaining() >= timeout
		return
		
	if disarmMeleeTimer[i] == null
		disarmMeleeTimer[i] = getTimer()..setData(i)
		this.addDisarmMelee()
		
	disarmMeleeTimer[i].start(timeout, () -> begin
		int j = GetExpiredTimer().getData()
		j.getUnit().removeDisarmMelee()
		disarmMeleeTimer[j].release()
		disarmMeleeTimer[j] = null
	end)
	
public function unit.isDisarmedMelee() returns boolean
	return disarmMeleeCounter[this.getIndex()] > 0
	
public function unit.addDisarmRanged()
	if not this.isDisarmedRanged()
		STATUS_DUMMY2.issueTargetOrderById(DISARM_RANGED_ORDER_ID, this)
	disarmRangedCounter[this.getIndex()]++

public function unit.removeDisarmRanged()
	disarmRangedCounter[this.getIndex()]--
	if not this.isDisarmedRanged()
		this.removeAbility(DISARM_RANGED_BUFF_ID)

public function unit.addDisarmRangedTimed(real timeout)
	int i = this.getIndex()
	if disarmRangedTimer[i] != null and disarmRangedTimer[i].getRemaining() >= timeout
		return
		
	if disarmRangedTimer[i] == null
		disarmRangedTimer[i] = getTimer()..setData(i)
		this.addDisarmRanged()
		
	disarmRangedTimer[i].start(timeout, () -> begin
		int j = GetExpiredTimer().getData()
		j.getUnit().removeDisarmRanged()
		disarmRangedTimer[j].release()
		disarmRangedTimer[j] = null
	end)
	
public function unit.isDisarmedRanged() returns boolean
	return disarmRangedCounter[this.getIndex()] > 0
		
init
	STATUS_DUMMY..hide()
		..addAbility(STUN_ABILITY_ID)
		..addAbility(SILENCE_ABILITY_ID)
		..addAbility(DISARM_BOTH_ABILITY_ID)
		.addAbility(ENSNARE_ABILITY_ID)
	STATUS_DUMMY1..hide()
		.addAbility(DISARM_MELEE_ABILITY_ID)
	STATUS_DUMMY2..hide()
		.addAbility(DISARM_RANGED_ABILITY_ID)